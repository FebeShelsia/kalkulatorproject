let prevNumber = '';
let calculationOperator = '';
let currentNumber = '0';

const calculatorScreen = document.querySelector('.calculator-screen');

const updateScreen = (number) => {
    calculatorScreen.value = number;
}

const inputNumber = (number) => {
if(currentNumber === '0') {
    currentNumber = number;
} else {
    currentNumber = currentNumber+ number;
}}

const inputOperator = (operator) => {
    prevNumber = currentNumber;
    calculationOperator = operator;
    currentNumber = '';
}

const inputOperator = (operator) => {
    prevNumber = currentNumber;
    calculationOperator = operator;
    currentNumber = '';
}

const calculate = () => {
    let result = 0;
    switch(calculationOperator) {
        case "+":
            result = parseInt(prevNumber) + parseInt(currentNumber);
            break;
        case "-":
            result = parseInt(prevNumber) - parseInt(currentNumber);
            break;
        case "*":
            result = parseInt(prevNumber) * parseInt(currentNumber);
            break;
        case "/":
            result = parseInt(prevNumber) / parseInt(currentNumber);
            break;
        default:
            break;
    }
    currentNumber = result;
    calculationOperator = '';
}

function readdata(){
    const numbers = document.querySelectorAll(".number");
        
    numbers.forEach((number) => {
        number.addEventListener("click", (event) => {
            inputNumber(event.target.value);
            updateScreen(currentNumber);
        })
    })   
}

function readoperator(){
    const operators = document.querySelectorAll(".operator");
    
    operators.forEach((operator) => {
        operator.addEventListener("click", (event) => {
            inputOperator(event.target.value);
        })
    })
}

function calculation(){
    const equalSign = document.querySelector('.equal-sign');
    
    equalSign.addEventListener('click',() => {
        calculate()
        updateScreen(currentNumber);
    })    
}